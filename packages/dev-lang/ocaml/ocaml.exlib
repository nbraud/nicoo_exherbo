# Distributed under the terms of the GNU General Public License v2
# Copyright 2012 Nicolas Braud-Santoni   <nicolas@braud-santoni.eu>
# Copyright 2009 A Frederick Christensen <fauxmight@nosocomia.com>
# Copyright 2008 Saleem Abdulrasool      <compnerd@compnerd.org>
require flag-o-matic

SUMMARY="Caml is a general-purpose programming language, designed with program safety and reliability in mind."
DESCRIPTION="
The Objective Caml system is the main implementation of the Caml language. It features a powerful
module system and a full-fledged object-oriented layer. It comes with a native-code compiler that
supports numerous architectures, for high performance; a bytecode compiler, for increased
portability; and an interactive loop, for experimentation and rapid development.
"
HOMEPAGE="http://caml.inria.fr/"
LICENCES="|| ( LGPL-2 QPL-1.0 )"

MY_PNV=${PN}-$(ever replace 3 +)
DOWNLOADS="http://caml.inria.fr/pub/distrib/"${PN}"-"$(ever range 1-2)"/"${MY_PNV}".tar.bz2"
WORK=${WORKBASE}/${MY_PNV}

BUGS_TO="fauxmight@nosocomia.com"

UPSTREAM_DOCUMENTATION="http://caml.inria.fr/resources/doc/index.en.html"

MYOPTIONS="
    X
    ocamlopt [[ description = [ Adds support for OCaml native code compiler ] ]]
    doc      [[ description = [ Install OCaml's manpages ] ]]
    threads
    ncurses
    tk
"

DEPENDENCIES="
    build+run:
        ncurses? ( sys-libs/ncurses )
        tk? ( dev-lang/tk[>=8.2] )
        X?  ( x11-libs/libX11 )
    build:
        X?  ( x11-proto/xproto )
"


ocaml_src_configure() {
    # ocamlopt uses -pg. -pg and -fomit-frame-pointer conflict
    option ocamlopt && filter-flags -fomit-frame-pointer

    RAW_LDFLAGS=$(raw-ldflags) edo ./configure                  \
        $(option ncurses || echo "-no-curses")                  \
        $(option threads || echo "-no-pthread")                 \
        $(option tk || echo "--no-tk")                          \
        $(option tk && option X || echo "--tk-no-x11")          \
        --host ${CHOST}                                         \
        --prefix /usr                                           \
        --bindir /usr/bin                                       \
        --libdir /usr/${LIBDIR}/ocaml                           \
        --mandir /usr/share/man
}


ocaml_src_compile() {
    # parallel builds are broken so often, its not even worth trying anymore
    emake -j1 world

    # Parallel build fails when building ocamlopt
    option ocamlopt && emake -j1 opt opt.opt
}

ocaml_src_install() {
    emake BINDIR="${IMAGE}/usr/bin"                 \
          LIBDIR="${IMAGE}/usr/${LIBDIR}/ocaml" \
          MANDIR="${IMAGE}/usr/share/man" install

    # empty directory
    edo rmdir "${IMAGE}/usr/${LIBDIR}/ocaml/ocamldoc/custom"

    # Remove empty man dir. (OCaml 3 only)
    [[ $(ever major) == 3 ]] && option !ocamlopt && edo rmdir "${IMAGE}"/usr/share/man/man3

    # Remove man directory if needed
    option !doc && edo rm -rf "${IMAGE}"/usr/share/man/man3

    # compiler libraries
    dodir /usr/${LIBDIR}/ocaml/compiler-libs
    insinto /usr/${LIBDIR}/ocaml/compiler-libs
    doins "${WORK}"/{utils,typing,parsing}/*.{mli,cmi,cmo}

    # these only exist if native code compiler was built
    option ocamlopt && doins "${WORK}"/{utils,typing,parsing}/*.{cmx,o}

    # headers
    dodir /usr/include
    dosym /usr/${LIBDIR}/ocaml/caml /usr/include

    # remove references to ${IMAGE} from ld.conf, the build doesn't deal with $(DESTDIR)
    edo sed -i -e "s:${IMAGE}::g" "${IMAGE}/usr/${LIBDIR}/ocaml/ld.conf"
}

export_exlib_phases src_configure src_compile src_install

